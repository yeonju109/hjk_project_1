# 첫 번째 스테이지: Apache Tomcat 다운로드 및 압축 해제
FROM openjdk:11 AS builder
WORKDIR /builder

# 로컬에서 받은 파일을 복사하여 Docker 이미지에 추가
COPY apache-tomcat-9.0.83.tar.gz .

# 압축 해제 및 불필요한 파일 삭제
RUN tar -xf apache-tomcat-9.0.83.tar.gz \
    && rm apache-tomcat-9.0.83.tar.gz \
    && rm -rf apache-tomcat-9.0.83/webapps/* \
    && rm -rf apache-tomcat-9.0.83/webapps.dist \
    && rm -rf apache-tomcat-9.0.83/logs/* \
    && rm -rf apache-tomcat-9.0.83/temp/* \
    && rm -rf apache-tomcat-9.0.83/work/* \
    && rm -rf apache-tomcat-9.0.83/bin/*.bat \
    && rm -rf apache-tomcat-9.0.83/bin/*.tar.gz \
    && mkdir -p /usr/local/tomcat/webapps/ROOT

# 두 번째 스테이지: 최종 이미지 구축
FROM openjdk:11-jre-slim

# JDK 환경 변수 설정
ENV JAVA_HOME /usr/local/openjdk-11
ENV PATH $PATH:$JAVA_HOME/bin

# 두 번째 스테이지에서 압축 해제한 Tomcat을 최종 이미지로 복사
COPY --from=builder /builder/apache-tomcat-9.0.83 /usr/local/tomcat

# MySQL Connector JAR 파일을 Tomcat의 lib 폴더로 복사
COPY mysql-connector-j-8.0.33.jar /usr/local/tomcat/lib/
COPY ROOT /usr/local/tomcat/webapps/ROOT

# 작업 디렉토리 설정
WORKDIR /usr/local/tomcat

# CATALINA_OPTS 환경 변수 설정
ENV CATALINA_OPTS "$CATALINA_OPTS -Dfile.encoding=UTF-8"

# 포트 8080으로 Tomcat 서버 실행
CMD ["bin/catalina.sh", "run"]

