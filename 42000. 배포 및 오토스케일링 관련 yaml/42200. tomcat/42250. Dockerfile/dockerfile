# 1. tomcat 실행을 위한 openjdk:11.0.16-jre-slim을 설치합니다.
FROM openjdk:11.0.16-jre-slim
  
# 2. Asia/Seoul 시간을 설정합니다.
ENV TZ Asia/Seoul
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 3. JAVA 환경변수를 설정합니다.
ENV JAVA_HOME /usr/local/openjdk-11
ENV PATH $JAVA_HOME/bin:$PATH
ENV CLASS_PATH $JAVA_HOME/lib:$CLASS_PATH

# 4. health_check 스크립트 실행을 위한 mysqladmin 패키지 파일을 복사합니다.
# COPY ./default-mysql-client /usr/share/doc/default-mysql-client
COPY ./mysqladmin /usr/bin/mysqladmin

# 5. 로컬에서 받은 tomcat 압축파일을 복사하고 해제합니다.
COPY ./apache-tomcat-9.0.83.tar.gz /usr/local/
RUN cd /usr/local && tar -zxvf apache-tomcat-9.0.83.tar.gz && mv apache-tomcat-9.0.83 tomcat

# 6. MySQL Connector JAR 파일을 Tomcat의 lib 폴더로 복사합니다.
COPY ./mysql-connector-j-8.0.33.jar /usr/local/tomcat/lib/

# 7. CATALINA 환경변수를 설정합니다.
ENV CATALINA_HOME /usr/local/tomcat
ENV PATH $CATALINA_HOME/bin:$PATH
ENV CATALINA_OPTS "$CATALINA_OPTS -Dfile.encoding=UTF-8"
WORKDIR $CATALINA_HOME

# 8. JSP 파일을 복사합니다.
COPY ./jsp/*.jsp /usr/local/tomcat/webapps/ROOT/

# 9. 8080포트 오픈합니다.
EXPOSE 8080

# 10. CATALINA와 health_check 스크립트 실행
CMD ["/usr/local/tomcat/bin/catalina.sh", "run" & /usr/local/tomcat/health_check.sh"]
